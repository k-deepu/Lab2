import java.util.*;

public class QuickSort {

    // Partition the array into two sub-arrays based on the pivot element
    static int partition(int[] arr, int low, int high) {
        int pivot = arr[high];  // Choose the last element as the pivot
        int i = (low - 1);  // Pointer for the smaller element
        
        // Loop through the array
        for (int j = low; j < high; j++) {
            // If the current element is smaller than or equal to the pivot
            if (arr[j] <= pivot) {
                i++;
                // Swap arr[i] and arr[j]
                int temp = arr[i];
                arr[i] = arr[j];
                arr[j] = temp;
            }
        }

        // Swap the pivot element with the element at i + 1
        int temp = arr[i + 1];
        arr[i + 1] = arr[high];
        arr[high] = temp;
        
        return i + 1;  // Return the pivot index
    }

    // QuickSort algorithm to sort the array
    static void quickSort(int[] arr, int low, int high) {
        if (low < high) {
            // Find the pivot index
            int pi = partition(arr, low, high);
            
            // Recursively sort the elements before and after the pivot
            quickSort(arr, low, pi - 1);  // Left part
            quickSort(arr, pi + 1, high);  // Right part
        }
    }

    // Function to print the array
    static void printArray(int[] arr) {
        for (int i = 0; i < arr.length; i++) {
            System.out.print(arr[i] + " ");
        }
        System.out.println();
    }

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        // Input array size
        System.out.print("Enter the number of elements: ");
        int n = scanner.nextInt();

        // Input array elements
        int[] arr = new int[n];
        System.out.println("Enter the elements:");
        for (int i = 0; i < n; i++) {
            arr[i] = scanner.nextInt();
        }

        // Call quickSort
        quickSort(arr, 0, arr.length - 1);

        // Print the sorted array
        System.out.println("Sorted Array: ");
        printArray(arr);

        scanner.close();
    }
}
